# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile
# ~~~~~
# Play uses HOCON as its configuration file format.  HOCON has a number
# of advantages over other config formats, but there are two things that
# can be used when modifying settings.
#
# You can include other configuration files in this main application.conf file:
#include "extra-config.conf"
#
# You can declare variables and substitute for them:
#mykey = ${some.value}
#
# And if an environment variable exists when there is no other subsitution, then
# HOCON will fall back to substituting environment variable:
#mykey = ${JAVA_HOME}

## Akka
# https://www.playframework.com/documentation/latest/ScalaAkka#Configuration
# https://www.playframework.com/documentation/latest/JavaAkka#Configuration
# ~~~~~
# Play uses Akka internally and exposes Akka Streams and actors in Websockets and
# other streaming HTTP responses.
akka {
  # "akka.log-config-on-start" is extraordinarly useful because it log the complete
  # configuration at INFO level, including defaults and overrides, so it s worth
  # putting at the very top.
  #
  # Put the following in your conf/logback.xml file:
  #
  # <logger name="akka.actor" level="INFO" />
  #
  # And then uncomment this line to debug the configuration.
  #
  #log-config-on-start = true
}

## Enable HTTPS
# https://www.playframework.com/documentation/latest/ConfiguringHttps
# ~~~~~
# By default, Play listens for unencrypted HTTP traffic on port 9000.
# gRPC requires HTTP/2, which in turn requires an encrypted connection.
play.server.https.port = 9443

## Secret key
# http://www.playframework.com/documentation/latest/ApplicationSecret
# ~~~~~
# The secret key is used to sign Play's session cookie.
# This must be changed for production, but we don't recommend you change it in this file.
play.http.secret.key = "lskdflkshdfgkjlhsdjkfhsdkljhfjklsdhf"

## Modules
# https://www.playframework.com/documentation/latest/Modules
# ~~~~~
# In order to use the client we have to configure its Guice module:
play.modules {
  enabled += example.myapp.helloworld.grpc.AkkaGrpcClientModule

  # If there are any built-in modules that you want to disable, you can list them here.
  #disabled += ""
}

# And we can configure the default target where the gRPC services are expected to run:
# (Alternatively Akka service discovery can be used to discover them)
akka.grpc.client {
  "helloworld.GreeterService" {
    host = "localhost"
    port = 9443
    ssl-config {
      trustManager = {
        stores = [
          { type = "JKS", path = ${user.dir}/generated.keystore }
        ]
      }
    }
  }
}
